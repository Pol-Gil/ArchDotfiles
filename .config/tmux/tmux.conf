###############################################################
# Sections:
#   -> Config
#   -> Theme
#   -> Hotkeys
#   -> Vim
#   -> Plugins
#
###############################################################

# PLUGINS MUST GO ON .tmux.conf

###############################################################
# -> Config                                                   #
###############################################################

# 0 is too far from ` ;)
set -g base-index 1

# Set lock-screen to Matrix theme after 15 minutes
set -g lock-after-time 900
set -g lock-command "/usr/bin/cmatrix -b"

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g history-limit 10000

#setw -g monitor-activity off
set -g visual-activity off

# No delay for escape key press
set -sg escape-time 0

# Tmux is automatically started after the computer/server is turned on
#set -g @continuum-boot 'on'

# Sets automatic restore ON
#set -g @continuum-restore 'on'

set -g @continuum-save-interval '5'

# If run as "tmux attach", create a session if one does not already exist
new-session -n $HOST

# Actualizar cada segundo la barra
set-option -s status-interval 1

###############################################################
# -> Theme                                                    #
###############################################################

# Mac
if-shell "uname | grep -q Darwin" "source-file ~/.config/tmux/tmux.conf.macos"

# Linux laptop/tower
if-shell "laptop-detect" {
if-shell "uname | grep -q Linux" "source-file ~/.config/tmux/tmux.conf-linux-laptop"
}

if-shell  "! laptop-detect" {
if-shell "uname | grep -q Linux" "source-file ~/.config/tmux/tmux.conf-linux-tower"
}

# Status bar lenght
set -g status-right-length 100

set -g status-bg black
set -g status-fg white
# Dracula

#set -g status-interval 62
set -g status-left-length 1000

# Center the window lis
set -g status-justify centre
%if ' "$OSTYPE" == "linux-gnu"* '
    # Enable truecolor, vim doesnt work have to use neovim
    set -g default-terminal "tmux-256color"
    #set -ga terminal-overrides ",xterm-termite:RGB"
    set -g terminal-overrides ',xterm-256color:Tc,st-256color:Tc,xterm-termite:Tc,xterm-256color-italic:Tc'
%endif

%if ' "$OSTYPE" == "darwin"* '
    # Terminal type configuration
    set -g default-terminal "screen-256color"
    set -ga terminal-overrides ",xterm-256color:Tc"
%endif

#set -ga terminal-overrides 'xterm*:\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%{1}%;%d\007'

# Needed to see proper vim cursor in vim with tmux
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
###############################################################
# -> Hotkeys                                                  #
###############################################################

# Change ctrl b to ctrl a
set-option -g prefix C-a

# Reload tmux config
bind r source-file ~/.tmux.conf

# split panes using | and -
unbind '"'
unbind '%'
bind-key v split-window -h
bind-key - split-window -v

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Set copy mode to prefix
bind-key u copy-mode

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

#unbind h
#bind-key h split-window -v

#bind-key M-j resize-pane -D
#bind-key M-k resize-pane -U
#bind-key M-h resize-pane -L
#bind-key M-l resize-pane -R

# Vim style pane selection
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

###############################################################
# -> Vim                                                      #
###############################################################

# for vim
set -g @resurrect-strategy-vim 'session'

# for neovim
set -g @resurrect-strategy-nvim 'session'

# Vi keys
setw -g mode-keys vi

# Fix for vim
set -g @resurrect-processes 'vim mvim "git log" "~MacVim.app"'

set -g focus-events on

###############################################################
# -> Plugins                                                  #
###############################################################
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins/'

set -g @plugin 'tmux-plugins/tpm'

# Pane controls
set -g @plugin 'tmux-plugins/tmux-pain-control'

# Tmux basic configs
set -g @plugin 'tmux-plugins/tmux-sensible'

# Tells you when you have pressed the prefix
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Displays battery life
set -g @plugin 'tmux-plugins/tmux-battery'

# Resurrects tmux 
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @resurrect-capture-pane-contents 'on'

run -b '~/.config/tmux/plugins/tpm/tpm'
