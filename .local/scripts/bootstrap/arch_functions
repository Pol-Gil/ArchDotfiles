#! /usr/bin/env bash
### VARIABLES
scripts=$HOME/.local/scripts
# --needed https://superuser.com/questions/568967/prevent-pacman-from-reinstalling-packages-that-were-already-installed
flags="-S --noconfirm --needed"
# To use commands on terminal first type: 
# export flags="-S --noconfirm --needed"

### FUNCTIONS
## Invariant: be at $HOME dir
base_install () {
    # Fix some errors and cleanup
    # mkdir always before touch
    mkdir -p "$XDG_DATA_HOME"/vim/{undo,swap,backup} # Fixes vim
    mkdir -p "$HOME/.vim/cache/viminfo" # vim viminfo
    mkdir $HOME/.cache/zsh
    mkdir $HOME/.cache/vlc

    touch $HOME/.vim/cache/viminfo # viminfo
    touch $XDG_DATA_HOME/vim/viminfo # viminfo

    # Nemo "best filemanager"
    gsettings set org.cinnamon.desktop.default-applications.terminal exec # Tell Nemo to use Termite instead of gnome-terminal
    gsettings set org.cinnamon.desktop.default-applications.terminal exec-arg -e # Termite execute argument is -e in gnome-terminal its -x
    sudo pacman nemo $flags
    sudo pacman nemo-fileroller $flags
    sudo pacman nemo-preview $flags
    sudo pacman nemo-seahorse $flags
    sudo pacman nemo-share $flags

    # Terminal
    sudo pacman inotify-tools $flags           # inotifywatch -r $file (to watch if those files have been accessed)
    sudo pacman base-devel $flags              # AUR
    sudo pacman bat $flags                     # "Cat" on steroids
    sudo pacman dhcpcd $flags                  # Internet
    sudo pacman dnsutils $flags                # Ip
    sudo pacman exa $flags                     # "ls" on steroids
    sudo pacman exfat-utils $flags             # Add support for exfat https://wiki.archlinux.org/index.php/file_systems
    sudo pacman fzf $flags                     # Fuzzy finder
    sudo pacman gcc $flags                     # Cpp
    sudo pacman gdb $flags                     # debugging c++
    sudo pacman git $flags                     # It's git bro
    sudo pacman gvim $flags                    # Vim version with extra features
    sudo pacman htop $flags                    # Show system resources
    sudo pacman laptop-detect $flags           # Detect if using a laptop
    sudo pacman ncdu $flags                    # Manage storage
    sudo pacman net-tools $flags               # Ips
    sudo pacman npm $flags                     # Package manager
    sudo pacman ntfs-3g $flags                 # Read/write support for ntfs https://wiki.archlinux.org/index.php/NTFS-3G
    sudo pacman perl-file-mimeinfo $flags      # mimeopen -d $file and type whatever app you want to open that with
    sudo pacman polkit $flags                  # Policy kit
    sudo pacman polkit-gnome $flags            # https://wiki.archlinux.org/index.php/Polkit
    sudo pacman python $flags
    sudo pacman python3 $flags
    sudo pacman ranger $flags                  # Ranger
    sudo pacman rclone $flags                  # Rsync to remote
    sudo pacman reflector $flags               # Update Arch mirrors
    sudo pacman ruby $flags                    # Package manager
    sudo pacman stow $flags                    # To deploy dotfiles
    sudo pacman svn $flags                     # Similar to git
    sudo pacman termite $flags                 # Terminal emulator
    sudo pacman the_silver_searcher $flags     # Better and faster ack (and grep)
    sudo pacman tmux $flags                    # Terminal multiplexer
    sudo pacman udiskie $flags                 # Automater
    sudo pacman udisks2 $flags                 # Daemon to manipulate storage devices
    sudo pacman w3m $flags                     # Preview images on ranger
    sudo pacman wget $flags                    # Download stuff
    sudo pacman xclip $flags                   # Clipboard
    sudo pacman xdg-user-dirs $flags           # Manage user directories like "Downloads" https://wiki.archlinux.org/index.php/XDG_user_directories
    sudo pacman xfce4-clipman-plugin $flags    # Clipboard manager (persistant clip even when application is closed)
    sudo pacman xorg $flags                    # Display server
    sudo pacman xorg-xinit $flags              # Start X11 without LightDM "startx"  https://wiki.archlinux.org/index.php/Xinit
    sudo pacman yarn $flags                    # Package installer
    sudo pacman zsh $flags                     # Zsh shell

    # GUI
    sudo pacman calibre $flags                 # Book manager
    sudo pacman discord $flags
    sudo pacman dunst $flags                   # Notifications
    sudo pacman file-roller $flags             # Archive Manager
    sudo pacman gnome-calculator $flags        # Calculator
    sudo pacman gnome-font-viewer $flags       # Font viewer
    sudo pacman gucharmap $flags               # Characters keyboard
    sudo pacman hexchat $flags                 # IRC APP
    sudo pacman libreoffice-still $flags       # Office
    sudo pacman meld $flags                    # Best diff viewer "kompare pulls a lot of kde dependencies"
    sudo pacman nilfs-utils $flags             # Manage partitions 
    sudo pacman noto-fonts-emoji $flags        # Classic Emoji
    sudo pacman okular $flags                  # Best pdf viewer
    sudo pacman playerctl $flags               # Audio
    sudo pacman pulseaudio pulseaudio-equalizer pulseaudio-bluetooth $flags # Audio
    sudo pacman transmission-gtk $flags        # A simpler Torrent D.
    sudo pacman ttf-dejavu ttf-liberation ttf-droid ttf-ubuntu-font-family ttf-roboto noto-fonts $flags # Fonts
    sudo pacman tumbler ffmpegthumbnailer raw-thumbnailer $flags # IDK
    sudo pacman udftools $flags                # Manage partitions
    sudo pacman vlc $flags                     # Video player
    sudo pacman gnome-disk-utility $flags       # Partition manager by gnome
    sudo pacman partitionmanager $flags         # Partition manager for KDE
    # sudo pacman  gparted $flags                 # Manage partitions (doesn't work with ex-fat)

    # Theme
    #sudo pacman  breeze $flags                 # Theme
    sudo pacman adapta-gtk-theme $flags        # Alternative theme
    sudo pacman arc-gtk-theme arc-icon-theme $flags  # Arc theme and its icon's
    sudo pacman dconf-editor $flags            # Edit gnome configuration
    sudo pacman gtk2 gtk3 $flags
    sudo pacman kvantum-qt5 $flags             # Qt5 Custom themes
    sudo pacman lxappearance $flags            # Gtk configuration utility
    sudo pacman papirus-icon-theme $flags      # Best icon theme!
    sudo pacman qt5ct $flags                   # Qt5 configuration utility
    #https://wiki.archlinux.org/index.php/Uniform_look_for_Qt_and_GTK_applications
    #https://wiki.archlinux.org/index.php/qt

    ### AUR
    yay balena-etcher $flags                   # "Rufus" on linux
    yay birdtray $flags                        # Thunderbird tray
    yay google-chrome $flags                   # Best web browser
    yay pix $flags                             # Image viewer
    yay skypeforlinux-stable-bin $flags        # Skype
    yay spotify $flags                         # Spotify
    yay tomighty $flags                        # Pomodoro timer (take a break from life, read a book, contemplate life, make coffee...)
    yay ttf-ms-fonts $flags                    # Microsoft fonts ##deprecated
    yay visual-studio-code-bin $flags          # Microsoft's Visual Code /not #sudo pacman  code
    yay whatsapp-nativefier $flags             # Whatsapp client

    # Thunderbird
    #yay  thunderbird-bin $flags                # Might have to manually enter PGP key /not#sudo pacman  thunderbird
    sudo pacman thunderbird $flags             # Check if its the same version as thunderbird-bin

    # Lockscreen
    yay betterlockscreen $flags
    sudo pacman xss-lock $flags

    # Backups
    yay timeshift $flags                       # Tip: sudo timeshift-gtk
    sudo pacman cron $flags
}

arch_install() {
    # Drivers
    sudo pacman linux $flags
    sudo pacman linux-headers $flags
    # LTS release
    #sudo pacman linux-lts
    #sudo pacman linux-lts-headers
    #sudo pacman nvidia-lts
    # sudo pacman nvidia-dkms #very slow
    sudo pacman nvidia nvidia-utils $flags     # Nvidia
    sudo pacman xf86-video-intel mesa lib32-mesa $flags    # Intel
    sudo pacman lib32-nvidia-utils $flags      # Requires adding multilib libraries
    sudo pacman nvidia-settings $flags         # Add force composition pipeline in nvidia-settings

    # Printers
    # https://wiki.archlinux.org/index.php/CUPS
    sudo pacman  cups system-config-printer hplip $flags
    if [[ $FirstRun == y || $FirstRun == Y ]]; then
        sudo systemctl enable org.cups.cupsd.service
        sudo systemctl start org.cups.cupsd.service
    fi

    # Bluetooth
    sudo pacman  bluez bluez-utils $flags
    sudo pacman  blueberry $flags               # Linux Mint spin-off of GNOME Bluetooth
    if [[ $FirstRun == y || $FirstRun == Y ]]; then
        systemctl enable bluetooth.service
    fi

    # Display manager
    if [[ $FirstRun == y || $FirstRun == Y ]]; then
        systemctl enable lightdm.service
    fi
    sudo pacman  lightdm-gtk-greeter lightdm lightdm-gtk-greeter-settings $flags
    # Ntp for time syncro
    #https://wiki.archlinux.org/index.php/Systemd-timesyncd
    if [[ $FirstRun == y || $FirstRun == Y ]]; then
        systemctl enable systemd-timesyncd.service   # systemd time service
        sudo timedatectl set-ntp true                # Enable ntp
        systemctl disable ntpd.service
    fi
    # https://wiki.archlinux.org/index.php/USB_storage_devices
    # Network Manager and enable daemon on startup
    sudo pacman networkmanager $flags
    # Gui
    sudo pacman nm-connection-editor $flags
    # Applet
    sudo pacman nm-applet $flags
    if [[ $FirstRun == y || $FirstRun == Y ]]; then
        systemctl enable NetworkManager.service
    fi
}

yay_install() {
    cd ~/
    git clone https://aur.archlinux.org/yay.git
    cd yay
    makepkg -si
    sudo rm -r $HOME/yay
}

### DO ONCE
trackpad_scrolling () {
    sudo touch /etc/X11/xorg.conf.d/30-touchpad.conf
    echo 'Section "InputClass"
    Identifier "libinput touchpad catchall"
    MatchIsTouchpad "on"
    MatchDevicePath "/dev/input/event*"
    Driver "libinput"
    Option "NaturalScrolling" "true"
    EndSection' | sudo tee -a /etc/X11/xorg.conf.d/30-touchpad.conf
}

vim_install () {
    sudo pacman  neovim $flags
    cd $HOME
    vim +PlugInstall +qall
    # Vim YouCompleteMe plugin install
    bash $scripts/ycm.sh
    sudo pacman python2 python-pip $flags
    pip install wheel
    sudo npm install -g neovim
    python3 -m pip install --user --upgrade pynvim
    sudo gem install neovim
}

# Best Tiling Window Manager
i3_install () {
    # AUR
    yay cava $flags                            # https://github.com/karlstav/cava
    yay kbdd-git $flags                        # i3blocks keyboard layout

    # GUI/Terminal
    sudo pacman acpi $flags
    sudo pacman awk bc upower $flags           # Battery plus
    sudo pacman feh $flags                     # Wallpaper
    sudo pacman gnome-screenshot $flags        # Take screenshots with impr pant
    sudo pacman i3-gaps $flags                 # i3 with gaps
    sudo pacman i3blocks $flags                # Bottom bar
    sudo pacman light $flags                   # Brightness
    sudo pacman perl-anyevent-i3 python-dbus $flags
    sudo pacman picom $flags                   # Compositor, for transparencies
    sudo pacman pulseaudio alsa-utils $flags   # Audio
    sudo pacman rofi $flags                    # App menu Super+d
    sudo pacman yad xdotool $flags             # Calendar
    sudo pacman zenity $flags                  # Poweroff menu i3blocks
    #yay installs this: sudo pacman  jq xdotool indent perl-anyevent-i3 $flags # cava dependancies
}

# Best Desktop
cinnamon_install() {
    # GUI
    sudo pacman cinnamon $flags                # Desktop
    sudo pacman gnome-screenshot $flags        # Take screenshots with impr pant
    sudo pacman gnome-shell $flags             # Fallback mode in case cinnamon crashes, to have a taskbar
    sudo pacman metacity $flags                # Fallback mode in case cinnamon crashes
    sudo pacman python-numpy python-xlib $flags  # Color pick applet
    
    # AUR
    yay cinnamon-sound-effects $flags          # Sound effects
    yay mint-themes mint-y-icons mint-backgrounds $flags # Themes

    gsettings set org.cinnamon.desktop.wm.preferences resize-with-right-button true # alt + rightclick to resize windows
    # Uninstall  xf86-video-intel
    #https://wiki.archlinux.org/index.php/cinnamon
    # To fix laggy animations
    #https://www.reddit.com/r/linuxmint/comments/7v2jt6/laggy_cinnamon_animations/
    # Edit animation time (0.05)/usr/share/cinnamon/js/ui/expo.js
    # and /usr/share/cinnamon/js/ui/overview.js
}

gnome_install() {
    sudo pacman chrome-gnome-shell $flags
    # Extensions
    # dash to dock (add dock)
    # impatience (faster animations)
    # auto move windows (move apps to workspaces automatically)
    # WinTile (tile quarter windows)
    # cpu power manager (cpu management)
}

plasma_install() {
    sudo pacman  plasma $flags                  # Check archwiki first
    yay  ocs-url $flags                         # Easy install of kde store add-ons
}

bloat_install () {
    sudo pacman cmatrix $flags                 # Bloat
    sudo pacman cowsay $flags                  # A cow displaying text
    sudo pacman fortune-mod $flags             # Random quote
    sudo pacman lolcat $flags
    sudo pacman ponysay asciiquarium $flags
    sudo pacman sl $flags                      # Steam locomotor, (Did you mean to type ls?)
    yay figlet toilet $flags                   # Cool letters
    yay pipes.sh $flags                        # Lockscreens
}

virtualbox_install() {
    sudo pacman virtualbox $flags
    # Need to activate virtualization in bios
    # 'linux' kernel
    sudo pacman virtualbox-host-modules-arch $flags
    # other kernels including linux-lts
    sudo pacman virtualbox-host-dkms $flags
}

games_install () {
    #sudo pacman  dnsmasq $flags                # fixes download speed problem
    sudo pacman lutris $flags
    sudo pacman minecraft $flags
    sudo pacman steam $flags
    sudo pacman vulkan-tools $flags            # for gaming
}

laptop_install() {
    sudo pacman tlp $flags
    sudo systemctl enable tlp.service
    trackpad_scrolling
}

dwall() {
    cd $HOME
    git clone https://github.com/adi1090x/dynamic-wallpaper.git
    cd dynamic-wallpaper
    chmod +x install.sh
    ./install.sh
    cd $HOME
    sudo rm -r $HOME/dynamic-wallpaper
}

emacs_install () {
    sudo pacman emacs $flags
    sudo pacman ripgrep $flags
    sudo pacman fd $flags
    # DOOM
    git clone --depth 1 https://github.com/hlissner/doom-emacs $HOME/.emacs.d
    $HOME/.emacs.d/bin/doom install
}

### All packages in here should be handpicked
optional() {
    # Terminal
    #sudo pacman  github-cli $flags             # Github for terminal, create issues...
    sudo pacman doxygen texlive-most graphviz $flags # Doxygen

    # GUI
    sudo pacman obs-studio $flags              # Video recording
    sudo pacman audacity $flags                # Audio editor
    sudo pacman gimp $flags                    # Image editor
    sudo pacman r $flags                       # Probabilitat i estadística
    sudo pacman remmina freerdp libvncserver $flags   # Remote conexions
    sudo pacman texstudio $flags               # Latex text editor

    # AUR
    yay eclipse-java $flags                    # BD
    yay android-studio $flags                  # Android Studio
    yay rstudio-desktop-bin $flags             # Probabilitat i estadística IDE
    yay slack-desktop $flags                   # Slack
    yay youtube-dl $flags                      # Download youtube videos
    sudo pacman tor $flags                     # Tor private browser
    yay tor-browser $flags                     # Tor private browser
    yay f5fpc $flags                           # Connexio a UPClink

    # Calendar
    #sudo pacman  gnome-calendar gnome-keyring libsecret seahorse

    # Arduino
    #usermod -aG uucp,lock pol
    sudo pacman arduino-avr-core $flags
    sudo pacman arduino $flags

    # IDI
    sudo pacman qtcreator $flags

    # Bases de dades
    sudo pacman pgadmin4 $flags
    yay intellij-idea-ultimate-edition $flags  # BD paid IntelliJ
    sudo pacman dbeaver jdk-openjdk $flags     # Base de dades https://wiki.archlinux.org/index.php/Java#Switching_between_JVM https://bbs.archlinux.org/viewtopic.php?id=262107 https://wiki.archlinux.org/index.php/PostgreSQL https://wiki.archlinux.org/index.php/Dbeaver (if it doesn't work check used java version)
    #sudo pacman  intellij-idea-community-edition  # BD free version (no SQL)
}
